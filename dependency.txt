# set-up
npm i -g @nestjs/cli

# create project
nest new ${project-name}
nest new ${project-name} --skip-git
rm -rf .git

# run project
npm run start
npm run start:dev

#create file
nest generate module ${model_name}
nest generate controller ${} ${model_name}
nest generate controller ${} ${model_name} --no-spec
nest generate service ${model_name}
nest generate resolver ${model_name}
nest generate resource ${model_name}

#mongoose
npm i @nestjs/mongoose mongoose
npm install --save-dev @types/mongoose

#graphql
npm i @nestjs/graphql @nestjs/apollo graphql apollo-server-express
npm i @nestjs/graphql @nestjs/apollo graphql-tools graphql apollo-server-express
<!> command can't execute :: npm i type-graphql
npm i class-validator
npm i uuid
<!> command can't execute :: npm i type-graphql-query

#mongodb connection
MongooseModule.forRoot('mongodb+srv://<username>:<password>@cluster0.f2jgdfl.mongodb.net/nestjs-demo?retryWrites=true&w=majority'), 

#graphql connection
GraphQLModule.forRoot<ApolloDriverConfig>({
    driver: ApolloDriver,
    autoSchemaFile: 'schema.gql',
}), 

#authentication
npm i @nestjs/passport passport passport-local
npm i @nestjs/jwt passport-jwt
npm i @types/passport-jwt

npm i bcrypt jsonwebtoken nanoid cookie-parser
npm i @types/jsonwebtoken @types/nanoid @types/cookie-parser -D


#setup
npm i @nestjs/mongoose mongoose
npm install --save-dev @types/mongoose

npm i @nestjs/graphql @nestjs/apollo graphql apollo-server-express
npm i @nestjs/graphql @nestjs/apollo graphql-tools graphql apollo-server-express

npm i class-validator

npm i @nestjs/passport passport passport-local
npm i @nestjs/jwt passport-jwt
npm i @types/passport-jwt

npm i bcrypt 

npm i --save @nestjs/config